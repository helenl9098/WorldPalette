global proc deleteCurrentSelectRegion()
{
    global int $selectionType;
    global string $selectionRegion[];
    // Delete current selection region (if there is one)
    if ($selectionType) {
        select -r $selectionRegion[0];
        delete;
        $selectionType = 0;
    }
}

global proc makePlanarSelectRegion()
{
    global string $selectionMat;
    global string $selectionRegion[];
    global int $selectionType;
    // Create a 2-D selection bound from a plane
    $selectionRegion = `polyPlane -name "selectionRegion"`;
    rotate -r 90deg 0 0;
    scale -r 2 2 2;
    // Assign selection material to plane
    hyperShade -assign $selectionMat;
    $selectionType = 1;
}

global proc makeRadialSelectRegion()
{
    global string $selectionMat;
    global string $selectionRegion[];
    global int $selectionType;
    // Create a 2-D selection bound from a disc
    $selectionRegion = `polyCylinder -name "selectionRegion" -height 0.010`;
    rotate -r 90deg 0 0;
    // Assign selection material to disc
    hyperShade -assign $selectionMat;
    $selectionType = 2;
}

global proc focusOnCurrentSelection()
{
    global string $selectionRegion[];
    global int $selectionType;
    if ($selectionType) {
        select -r $selectionRegion[0];
        viewFit -f 0.;
    }
}

global proc saveSelection()
{
    global string $selectionRegion[];
    global int $selectionType;
    if ($selectionType) {
        float $width = 0;
        float $height = 0;
        float $boundBox[];
        if ($selectionType == 1) {
            // PLANAR
            $width = `polyPlane -q -w $selectionRegion`;
            $height = `polyPlane -q -h $selectionRegion`;
            $boundBox = `exactWorldBoundingBox $selectionRegion`;
            WorldPalette -st 1 -w $width -h $height -mib $boundBox[0] $boundBox[1] $boundBox[2] -mab $boundBox[3] $boundBox[4] $boundBox[5];
        } else if ($selectionType == 2) {
            // RADIAL
            $width = `polyCylinder -q -r $selectionRegion[0]`;
            $boundBox = `exactWorldBoundingBox selectionRegion`;
            WorldPalette -st 2 -w $width -mib $boundBox[0] $boundBox[1] $boundBox[2] -mab $boundBox[3] $boundBox[4] $boundBox[5];
        }
    }
}

global proc ShowGUI()
{
    global string $noSelect;
    global string $planarSelect;
    global string $radialSelect;
    window -title "WorldPalette GUI";
        columnLayout -adjustableColumn true;
            frameLayout -label "Selection" -collapsable true;
                frameLayout -label "Selection Mode";
                    columnLayout -columnAttach "both" 5 -rowSpacing 10 -columnWidth 300;
                        radioCollection;
                        $noSelect = `radioButton -l "No Selection" -select -onc deleteCurrentSelectRegion`;
                        $planarSelect = `radioButton -l "Planar Selection" -onc makePlanarSelectRegion -ofc deleteCurrentSelectRegion`;
                        $radialSelect = `radioButton -l "Radial Selection" -onc makeRadialSelectRegion -ofc deleteCurrentSelectRegion`;
                    setParent ..;
                 frameLayout -label "Options";
                     columnLayout -columnAttach "both" 5 -rowSpacing 10 -columnWidth 300;
                     button -l "Focus On Selection Region" -c focusOnCurrentSelection;
                     button -l "Save Selection to Palette" -c saveSelection;
                 setParent ..;
            setParent ..;
    showWindow;
}

global string $gMainWindow;
setParent $gMainWindow;

// Radio Buttons
global string $noSelect;
global string $planarSelect;
global string $radialSelect;

// Selection Shader
global string $selectionMat;

// Selection Region
global int $selectionExists = false;
global string $selectionRegion[];
global int $selectionType = 0;

// adds a new drop down menu
menu -l "World Palette"
-p MayaWindow
-to 1
-aob true
NewDropDownMenu;

// add an item to the drop down menu
menuItem -l "Show GUI"
-echoCommand true
-c ShowGUI
NewDropDownMenuItem1;

// Create selection shader
$selectionMat = `shadingNode -name "selection" -asShader lambert`;
setAttr "selection.color" -type double3 0.2 0.8 0.8;
setAttr "selection.transparency" -type double3 0.85 0.85 0.85;
select -cl  ;
